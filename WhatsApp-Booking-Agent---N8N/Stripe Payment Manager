{"createdAt":"2025-08-07T20:05:46.791Z","updatedAt":"2025-08-21T12:18:51.000Z","id":"eOFsoMleRckUd96C","name":"SARAN - STRIP WEBHOOK (Whatsapp)","active":true,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"/stripe-webhook","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-528,-3584],"id":"ba78c16f-989e-4fb9-bf31-e4633ae7a7ac","name":"Webhook","webhookId":"6c5e28db-f000-4428-85f9-7436ebf251d9"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-80,-3360],"id":"6e4b96ea-1d4d-4f6c-9d77-68583245da3c","name":"OpenAI Chat Model2","credentials":{"openAiApi":{"id":"BrorAjaby87F5a6C","name":"Thileepan-OpenAI"}}},{"parameters":{"operation":"send","phoneNumberId":"={{ $('Webhook').item.json.body.data.object.metadata.whats_chat_id }}","recipientPhoneNumber":"={{ $('Webhook').item.json.body.data.object.metadata.WhatsApp_from }}","textBody":"={{ $json.whatsapp }}","additionalFields":{"previewUrl":true}},"type":"n8n-nodes-base.whatsApp","typeVersion":1,"position":[608,-3584],"id":"c03a8fb9-575a-429b-8940-ee3c8c21c9ca","name":"Send","webhookId":"ab2ae93b-d3b0-4b04-acee-234526b7f172","credentials":{"whatsAppApi":{"id":"DnXLxxHGaCh0Q0sc","name":"Saran Whatsapp"}}},{"parameters":{"sendTo":"={{ $('Webhook').item.json.body.data.object.metadata.email }}","subject":"Payment  Status - Travizly","message":"={{ $json.email }}","options":{"appendAttribution":false,"ccList":"forfake401@gmail.com"}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[608,-3776],"id":"13158f50-800f-42e4-a7a0-2ee77b5eca59","name":"Send a message1","webhookId":"0840cdd9-32f7-449c-b553-038af1afc52e","credentials":{"gmailOAuth2":{"id":"PWgDj53dNZ5knDgb","name":"SARAN LINUX - MAIL"}}},{"parameters":{"jsCode":"/**\n * n8n Code node compatible script\n *\n * This script expects `items` to be available (provided by n8n).\n * It returns an array of objects (one per input item) where each object has a `.json` property.\n * Each output `.json` contains:\n *   - email: string|null\n *   - whatsapp: string|null\n *   - original: original text used for parsing (for debugging)\n *\n * Place this code directly into an n8n Code node (JavaScript).\n */\n\nfunction splitMessagesFromAgentOutputText(text) {\n  if (!text || typeof text !== 'string') return { email: null, whatsapp: null };\n\n  // Primary regex: capture content between the two markers (case-insensitive, flexible spacing)\n  const combinedRegex = /---\\s*EMAIL\\s*MESSAGE\\s*---\\s*([\\s\\S]*?)\\s*---\\s*WHATSAPP\\s*MESSAGE\\s*---\\s*([\\s\\S]*)/i;\n  const combinedMatch = text.match(combinedRegex);\n  if (combinedMatch) {\n    return {\n      email: combinedMatch[1].trim() || null,\n      whatsapp: combinedMatch[2].trim() || null,\n    };\n  }\n\n  // Fallbacks if markers are present but in different order or one is missing\n  const emailOnlyRegex = /---\\s*EMAIL\\s*MESSAGE\\s*---\\s*([\\s\\S]*)/i;\n  const whatsappOnlyRegex = /---\\s*WHATSAPP\\s*MESSAGE\\s*---\\s*([\\s\\S]*)/i;\n\n  const emailMatch = text.match(emailOnlyRegex);\n  const whatsappMatch = text.match(whatsappOnlyRegex);\n\n  const email = emailMatch ? emailMatch[1].trim() : null;\n  const whatsapp = whatsappMatch ? whatsappMatch[1].trim() : null;\n\n  // If neither matched, try splitting by the exact separator line for a best-effort split\n  if (!email && !whatsapp) {\n    const splitByWhatsapp = text.split(/---\\s*WHATSAPP\\s*MESSAGE\\s*---/i);\n    if (splitByWhatsapp.length === 2) {\n      const left = splitByWhatsapp[0].replace(/---\\s*EMAIL\\s*MESSAGE\\s*---/i, '').trim();\n      const right = splitByWhatsapp[1].trim();\n      return { email: left || null, whatsapp: right || null };\n    }\n  }\n\n  return { email, whatsapp };\n}\n\n/**\n * Helper to extract a single string from a given item.\n * Supports several common shapes:\n *  - item.json.output (string)\n *  - item.json (string)\n *  - item.json.output being an array of { output: \"...\" }\n *  - item.json being an array of objects with .output\n */\nfunction extractTextFromItem(item) {\n  if (!item) return '';\n\n  // If item.json is a string (rare), use it\n  if (typeof item.json === 'string') return item.json;\n\n  // If item.json.output exists and is string\n  if (item.json && typeof item.json.output === 'string') return item.json.output;\n\n  // If item.json is an array like [{ output: '...' }, ...]\n  if (Array.isArray(item.json) && item.json.length > 0) {\n    // join any output fields\n    return item.json\n      .map(el => (el && typeof el.output === 'string' ? el.output : (typeof el === 'string' ? el : '')))\n      .filter(Boolean)\n      .join('\\n\\n')\n      .trim();\n  }\n\n  // If item.json has fields that look like the example (e.g., { output: '...' } nested)\n  if (item.json && typeof item.json === 'object') {\n    // Try to find first stringy property that contains the markers\n    for (const key of Object.keys(item.json)) {\n      const val = item.json[key];\n      if (typeof val === 'string' && /---\\s*(EMAIL|WHATSAPP)\\s*MESSAGE\\s*---/i.test(val)) return val;\n    }\n  }\n\n  // Fallback: attempt to stringify (useful for debugging)\n  try {\n    return JSON.stringify(item.json);\n  } catch (e) {\n    return '';\n  }\n}\n\n/* ==========================\n   Main (n8n will provide `items`)\n   ========================== */\n\nconst results = [];\n\nfor (const item of items) {\n  const text = extractTextFromItem(item);\n  const { email, whatsapp } = splitMessagesFromAgentOutputText(text);\n\n  // Output one object per input item (n8n expects an array of { json: {...} })\n  results.push({\n    json: {\n      email,\n      whatsapp,\n      original: text || null,\n    },\n  });\n}\n\n// IMPORTANT: return an array of objects with `json` property.\nreturn results;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[384,-3680],"id":"2a1bb111-881d-43b1-a68b-c0a34d9e9e22","name":"Code1"},{"parameters":{"operation":"update","documentId":{"__rl":true,"value":"1VCDQARAM-3PeUpto_BwcIoXxWo1sImmWFpWBf5eiboQ","mode":"list","cachedResultName":"Booking agent","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1VCDQARAM-3PeUpto_BwcIoXxWo1sImmWFpWBf5eiboQ/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":2082699378,"mode":"list","cachedResultName":"Booking Details","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1VCDQARAM-3PeUpto_BwcIoXxWo1sImmWFpWBf5eiboQ/edit#gid=2082699378"},"columns":{"mappingMode":"defineBelow","value":{"Booking ID":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Booking_ID__using_to_match_', ``, 'string') }}","Payment Status":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Payment_Status', ``, 'string') }}","Remarks":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Remarks', ``, 'string') }}","Name":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Name', ``, 'string') }}","Mobile Number":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Mobile_Number', ``, 'string') }}","Email Address":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Email_Address', ``, 'string') }}","Agency Name":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Agency_Name', ``, 'string') }}","Route":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Route', ``, 'string') }}","Vehicle":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Vehicle', ``, 'string') }}","row_number":0},"matchingColumns":["Booking ID"],"schema":[{"id":"Booking ID","displayName":"Booking ID","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Name","displayName":"Name","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Mobile Number","displayName":"Mobile Number","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Email Address","displayName":"Email Address","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Agency Name","displayName":"Agency Name","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Payment Status","displayName":"Payment Status","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Route","displayName":"Route","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Vehicle","displayName":"Vehicle","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Remarks","displayName":"Remarks","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"row_number","displayName":"row_number","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true,"readOnly":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheetsTool","typeVersion":4.6,"position":[176,-3360],"id":"b66aab2a-cab3-49a2-b77d-cd03a543e9ff","name":"Update row in sheet in Google Sheets","credentials":{"googleSheetsOAuth2Api":{"id":"EboGKyC4eReLvT5Z","name":"SARAN - LINUX ACCOUNT"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Webhook').item.json.body.data.object.metadata.WhatsApp_from }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[48,-3360],"id":"4fddd95f-77f5-4285-a7cd-c904bf2098da","name":"Simple Memory"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.body.type }}","rightValue":"checkout.session.completed","operator":{"type":"string","operation":"equals"},"id":"b7621eca-7690-4b3c-a873-3bd163528df5"}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"550dcab8-a68a-45ec-89fe-d617b4cac832","leftValue":"={{ $json.body.type }}","rightValue":"checkout.session.expired","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-304,-3584],"id":"e81bcf2f-ba43-44f8-9b68-c2ab88f13189","name":"Switch"},{"parameters":{"promptType":"define","text":"=Booking Details : { \n\"bookingId\": {{ $json.body.data.object.metadata.bookingId }},\n\"passenger\": {{ $json.body.data.object.metadata.passenger }},\n\"phone\": {{ $json.body.data.object.metadata.phone }},\n\"email\": {{ $json.body.data.object.metadata.email }},\n\"agency\": {{ $json.body.data.object.metadata.agency }},\n\"route\": {{ $json.body.data.object.metadata.route }},\n\"vehicle\": {{ $json.body.data.object.metadata.vehicle }},\n\"totalAmount\": {{ $json.body.data.object.metadata.totalAmount }},\n}\nCurrent Upated Payment status : {{ $json.body.data.object.payment_status }}\nCurrent Payment Webhoot type : {{ $json.body.type }}","options":{"systemMessage":"You are an automation agent that receives a single **plain-text booking confirmation** as input. Follow these steps **exactly** and output **only** the two message sections specified at the end.\n\n1. **Parse the booking message (robustly)**\n\n* Extract these fields (trim whitespace; accept label variations and extra spaces):\n\n  * `Booking ID` → booking\\_id\n  * `Passenger` → passenger\\_name\n  * `Email` → email\n  * `Mobile` → phone\n  * `Agency` → agency\n  * `Route` → route\n  * `Vehicle` → vehicle\n  * `Total Amount` → total\\_amount\\_raw (e.g., \"240 SAR\")\n\n    * Split into `amount_value` (number) and `amount_currency` (letters)\n  * `Payment Status` → payment\\_status\n* Normalize `payment_status` to one of: **Paid, Pending, Failed, Cancelled, Unknown** (use Unknown if unclear).\n* If any field is missing, set it to **null**. Do not invent or guess values.\n\n2. **Update Google Sheet (mandatory)**\n\n* Use the Google Sheets tool configured externally with:\n\n  * Spreadsheet: `{{SHEET_ID_OR_NAME}}`\n  * Worksheet/Tab: `{{TAB_NAME}}`\n  * Columns (exact): `Booking ID, Passenger, Email, Mobile, Agency, Route, Vehicle, Total Amount, Amount Value, Amount Currency, Payment Status`\n* Find the row by **Booking ID** (primary key).\n\n  * If found → update **only** the `Payment Status` column for that row.\n  * If not found → append a new row with **all extracted fields** and the normalized payment status.\n* If the sheet operation fails, do **not** claim success; continue and still produce the two message outputs. (Any sheet success/failure logging will be handled by the calling workflow; do not print it.)\n\n3. **Compose messages (Only use HTML, no sending claims)**\n   A) **Email message** — short, professional and very attractive UI, include:\n\n* Greeting (use passenger\\_name if available, else “Hello,”)\n* Booking reference (booking\\_id)\n* Current payment status (normalized)\n* Amount (amount\\_value + amount\\_currency) if available\n* Route if available (optional but helpful)\n* Next step depending on status:\n\n  * **Paid** → Thank them and confirm receipt.\n  * **Pending** → Politely ask them to complete payment \n  * **Failed** or **Cancelled** → Briefly explain the outcome and offer help (e.g., “Reply to this message for assistance”).\n* Friendly sign-off: `Travizly Transport Support`\n* No tracking language, no mention that an email was sent.\n\nB) **WhatsApp message** — short, professional with full details, Include emojies and so decorative elements, include:\n\n* Greeting (use passenger\\_name if available, else “Hello,”)\nBooking details sending in this format (include emojies and so decorative elements on it):{\nBooking ID: {booking_id}\nPassenger: {name}\nEmail: {email}\nMobile: {mobile}\nAgency: {agency}\nRoute: {selected_route}\nVehicle: {selected_vehicle} ({capacity})\nTotal Amount: {price} SAR\nCurrent payment status: {payment_status}\n}\n* Next step depending on status:\n\n  * **Paid** → Thank them and confirm receipt.\n  * **Pending** → Politely ask them to complete payment\n  * **Failed** or **Cancelled** → Briefly explain the outcome and offer help (e.g., “Reply to this message for assistance”).\n* Friendly sign-off: `Travizly Transport Support`\n* No tracking language, mention that an email was sent.\n\n\n4. **Final output format (strict)**\n\n* Output **only** the following two sections with **no extra text** before, after, or between them:\n\n```\n--- EMAIL MESSAGE ---\n<email message content here>\n\n--- WHATSAPP MESSAGE ---\n<whatsapp message content here>\n```\n\n5. **Behavioral rules**\n\n* Do not ask clarifying questions; parse best-effort if text is messy.\n* Do not invent missing data; use null internally where appropriate.\n* Do not print sheet-update logs or tool responses—only produce the two message sections above.\n* Use clear, polite, professional language.\n* Don't Send the whatsapp and the email message as a single lined message always send the full details of the booking on both whatsapp and email message.\n* If the Current Upated Payment status : unpaid and Current Payment Webhoot type : checkout.session.expired that means the payment is not completed and the older link was expried the new payment url wil be sent after this message on whatsapp and ask the custome to pay with new url and confirm the booking.\nz"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-48,-3584],"id":"4ee50e4a-5120-4955-a37d-f8372ddd07cd","name":"Payment Manager"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"34cf8862-4c5f-4f62-970e-65f3ba96306a","leftValue":"={{ $('Webhook').item.json.body.type }}","rightValue":"checkout.session.expired","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"e579761a-04b0-4231-aca6-9b50178374ca","leftValue":"={{ $('Webhook').item.json.body.data.object.metadata.paymentattempt }}","rightValue":"1","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[384,-3392],"id":"1c3dfef3-0f8a-43b9-b9ad-4aa50d732aac","name":"If"},{"parameters":{"method":"POST","url":"https://api.stripe.com/v1/checkout/sessions","authentication":"predefinedCredentialType","nodeCredentialType":"stripeApi","sendBody":true,"contentType":"form-urlencoded","bodyParameters":{"parameters":[{"name":"mode","value":"payment"},{"name":"success_url","value":"https://travizly.com"},{"name":"cancel_url","value":"https://travizly.com"},{"name":"line_items[0][price_data][currency]","value":"={{ $('Webhook').item.json.body.data.object.currency }}"},{"name":"line_items[0][price_data][unit_amount]","value":"={{ $('Webhook').item.json.body.data.object.amount_total }}"},{"name":"line_items[0][price_data][product_data][name]","value":"=Booking Details: \n{{ $('Webhook').item.json.body.data.object.metadata.route }} - {{ $('Webhook').item.json.body.data.object.metadata.vehicle }}"},{"name":"line_items[0][quantity]","value":"1"},{"name":"metadata[whats_chat_id]","value":"={{ $('Webhook').item.json.body.data.object.metadata.whats_chat_id }}"},{"name":"metadata[WhatsApp_from]","value":"={{ $('Webhook').item.json.body.data.object.metadata.WhatsApp_from }}"},{"name":"metadata[bookingId]","value":"={{ $('Webhook').item.json.body.data.object.metadata.bookingId }}"},{"name":"metadata[passenger]","value":"={{ $('Webhook').item.json.body.data.object.metadata.passenger }}"},{"name":"metadata[email]","value":"={{ $('Webhook').item.json.body.data.object.metadata.email }}"},{"name":"metadata[phone]","value":"={{ $('Webhook').item.json.body.data.object.metadata.phone }}"},{"name":"metadata[agency]","value":"={{ $('Webhook').item.json.body.data.object.metadata.agency }}"},{"name":"metadata[route]","value":"={{ $('Webhook').item.json.body.data.object.metadata.route }}"},{"name":"metadata[vehicle]","value":"={{ $('Webhook').item.json.body.data.object.metadata.vehicle }}"},{"name":"=metadata[totalAmount]","value":"={{ $('Webhook').item.json.body.data.object.metadata.totalAmount }}"},{"name":"metadata[urlattempt2]","value":"1"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[608,-3392],"id":"523a052e-3778-429f-ba81-d9489e1d52a3","name":"Strip URL Creator","credentials":{"httpBearerAuth":{"id":"NfRbgMweXY562Kds","name":"Bearer Auth account 2"},"stripeApi":{"id":"FuM08HtjfwnvHxHf","name":"Stripe account"}}},{"parameters":{"operation":"send","phoneNumberId":"={{ $('Webhook').item.json.body.data.object.metadata.whats_chat_id }}","recipientPhoneNumber":"={{ $('Webhook').item.json.body.data.object.metadata.WhatsApp_from }}","textBody":"=Please complete the payment to confirm your booking.  \n*Payment Link:*  \n{{ $json.url }}","additionalFields":{"previewUrl":true}},"type":"n8n-nodes-base.whatsApp","typeVersion":1,"position":[832,-3392],"id":"2520d690-019c-405e-94e9-a2fd63d073f9","name":"Send Payment URL","webhookId":"ab2ae93b-d3b0-4b04-acee-234526b7f172","credentials":{"whatsAppApi":{"id":"DnXLxxHGaCh0Q0sc","name":"Saran Whatsapp"}}}],"connections":{"Webhook":{"main":[[{"node":"Switch","type":"main","index":0}]]},"OpenAI Chat Model2":{"ai_languageModel":[[{"node":"Payment Manager","type":"ai_languageModel","index":0}]]},"Code1":{"main":[[{"node":"Send a message1","type":"main","index":0},{"node":"Send","type":"main","index":0}]]},"Update row in sheet in Google Sheets":{"ai_tool":[[{"node":"Payment Manager","type":"ai_tool","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"Payment Manager","type":"ai_memory","index":0}]]},"Switch":{"main":[[{"node":"Payment Manager","type":"main","index":0}],[{"node":"Payment Manager","type":"main","index":0}]]},"Payment Manager":{"main":[[{"node":"Code1","type":"main","index":0},{"node":"If","type":"main","index":0}]]},"Strip URL Creator":{"main":[[{"node":"Send Payment URL","type":"main","index":0}]]},"If":{"main":[[{"node":"Strip URL Creator","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[{"json":{"headers":{"connection":"upgrade","host":"n8n.dcxworks.com","x-real-ip":"54.187.216.72","x-forwarded-for":"54.187.216.72","x-forwarded-proto":"https","content-length":"3957","content-type":"application/json; charset=utf-8","cache-control":"no-cache","user-agent":"Stripe/1.0 (+https://stripe.com/docs/webhooks)","accept":"*/*; q=0.5, application/json","stripe-signature":"t=1755773957,v1=c0d317ebbb353ccac153db250ca50a0a6b084ac422e83e87522b3c45c52b49d5,v0=c56ccb5a4b07be3b6f80b726728b9508be4f54be8ef47c84a7dff36ce6fb3b10"},"params":{},"query":{},"body":{"id":"evt_1RyWDBCYtXClFEI2RBJLqWcf","object":"event","api_version":"2020-08-27","created":1755773957,"data":{"object":{"id":"cs_test_a1NzTB1nNnuJLI0ODdqF7TEGeGwxzI9szB7wi576SnsdgfDMJFwQ8kqT4C","object":"checkout.session","adaptive_pricing":{"enabled":true},"after_expiration":null,"allow_promotion_codes":null,"amount_subtotal":50000,"amount_total":50000,"automatic_tax":{"enabled":false,"liability":null,"provider":null,"status":null},"billing_address_collection":null,"cancel_url":"https://travizly.com","client_reference_id":null,"client_secret":null,"collected_information":{"shipping_details":null},"consent":null,"consent_collection":null,"created":1755773913,"currency":"sar","currency_conversion":null,"custom_fields":[],"custom_text":{"after_submit":null,"shipping_address":null,"submit":null,"terms_of_service_acceptance":null},"customer":"cus_SuKsXGeFQGvRZ9","customer_creation":"always","customer_details":{"address":{"city":"Thiruvarur","country":"IN","line1":"Sevem Street","line2":"Abulhasn Appartment","postal_code":"610009","state":"Tamil Nadu"},"email":"s.r2005jsus@gmail.com","name":"Saranraj S","phone":null,"tax_exempt":"none","tax_ids":[]},"customer_email":null,"discounts":[],"expires_at":1755860313,"invoice":null,"invoice_creation":{"enabled":false,"invoice_data":{"account_tax_ids":null,"custom_fields":null,"description":null,"footer":null,"issuer":null,"metadata":{},"rendering_options":null}},"livemode":false,"locale":null,"metadata":{"vehicle":"Toyota Coaster (10–13 Pax)","route":"Madinah Hotel to Madinah Airport (Departure)","agency":"VSP","phone":"9789148783","totalAmount":"500 SAR","whats_chat_id":"738855462647768","email":"saranraj2005jsus@gmail.com","bookingId":"A7B9C4D2E1","WhatsApp_from":"919789148783","passenger":"Sankar","paymentattempt":"0"},"mode":"payment","origin_context":null,"payment_intent":"pi_3RyWCTCYtXClFEI20FiGhPv3","payment_link":null,"payment_method_collection":"always","payment_method_configuration_details":{"id":"pmc_1RtOghCYtXClFEI2TGSD9RFh","parent":null},"payment_method_options":{},"payment_method_types":["card","link"],"payment_status":"unpaid","permissions":null,"phone_number_collection":{"enabled":false},"recovered_from":null,"saved_payment_method_options":{"allow_redisplay_filters":["always"],"payment_method_remove":"disabled","payment_method_save":null},"setup_intent":null,"shipping":null,"shipping_address_collection":null,"shipping_options":[],"shipping_rate":null,"status":"complete","submit_type":null,"subscription":null,"success_url":"https://travizly.com","total_details":{"amount_discount":0,"amount_shipping":0,"amount_tax":0},"ui_mode":"hosted","url":null,"wallet_options":null}},"livemode":false,"pending_webhooks":2,"request":{"id":null,"idempotency_key":null},"type":"checkout.session.expired"},"webhookUrl":"https://n8n.dcxworks.com/webhook/stripe-webhook","executionMode":"production"}}]},"versionId":"887a8f1b-c9a5-412f-8730-47f273b60f5e","triggerCount":1,"shared":[{"createdAt":"2025-08-07T20:05:46.794Z","updatedAt":"2025-08-07T20:05:46.794Z","role":"workflow:owner","workflowId":"eOFsoMleRckUd96C","projectId":"WTQM0Nsb5YipcTUX","project":{"createdAt":"2025-07-23T08:31:14.290Z","updatedAt":"2025-07-23T08:32:33.777Z","id":"WTQM0Nsb5YipcTUX","name":"DCXworks Private Limited <admin@dcxworks.com>","type":"personal","icon":null,"description":null,"projectRelations":[{"createdAt":"2025-07-23T08:31:14.290Z","updatedAt":"2025-07-23T08:31:14.290Z","role":"project:personalOwner","userId":"32e5174a-8499-41d4-a7e3-46e06856d4d5","projectId":"WTQM0Nsb5YipcTUX","user":{"createdAt":"2025-07-23T08:31:13.588Z","updatedAt":"2025-09-08T05:13:52.000Z","id":"32e5174a-8499-41d4-a7e3-46e06856d4d5","email":"admin@dcxworks.com","firstName":"DCXworks","lastName":"Private Limited","personalizationAnswers":{"version":"v4","personalization_survey_submitted_at":"2025-07-23T08:32:53.840Z","personalization_survey_n8n_version":"1.103.2","companySize":"<20","companyType":"digital-agency","role":"business-owner","reportedSource":"friend"},"settings":{"userActivated":true,"firstSuccessfulWorkflowId":"OiOxeHtpT13Rj2Hx","userActivatedAt":1753271399817,"easyAIWorkflowOnboarded":true,"dismissedCallouts":{"aiAgentStarterCallout":true,"preBuiltAgentsCalloutHttpRequest":true},"npsSurvey":{"responded":true,"lastShownAt":1755136428381}},"role":"global:owner","disabled":false,"mfaEnabled":false,"lastActiveAt":"2025-09-07","isPending":false}}]}}],"tags":[{"createdAt":"2025-08-10T20:56:09.034Z","updatedAt":"2025-08-10T20:56:09.034Z","id":"9NZHxbd4uh6gtgzw","name":"Travel agent"},{"createdAt":"2025-08-10T20:55:59.528Z","updatedAt":"2025-08-10T20:55:59.528Z","id":"cbWOHLOT0I6wsWWp","name":"Travizly"},{"createdAt":"2025-08-10T20:54:24.930Z","updatedAt":"2025-08-10T20:54:24.930Z","id":"mbssRmndtj8TnWsJ","name":"SARAN"}]}